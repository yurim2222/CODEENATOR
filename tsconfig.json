{
  "compilerOptions": {
    "paths": {
      "~/*": ["./src/*"]  //루트 경로를 설정해준다 (해당 설정은 '~/'부터 루트 경로가 시작')
    },
    "experimentalDecorators": true, //코드에서 데코레이터 사용을 허용
    "target": "es6", //컴파일을 해줄 자바스크립트 버전
    "lib": ["es6", "dom", "dom.iterable", "esnext"],
    "allowJs": true, //JS허용여부
    "skipLibCheck": true, //파일의 타입 확인을 건너 뛸 지 여부
    "esModuleInterop": true, //기본 내보내기 없이 모듈에서 기본 가져오기를 허용
    "allowSyntheticDefaultImports": true, //불러오려는 모듈에 default export가 없을 때도 import as * XXX가 아닌 import XXX를 사용할 수 있도록 하는 설정, 
    //(esModuleInterop === true이면 allowSyntheticDefaultImports도 true인게 자연스럽다)
    "strict": true, //strict모드 on 
    "forceConsistentCasingInFileNames": true, //사용한 file의 이름을 대소문자까지 정확히 체크
    "noFallthroughCasesInSwitch": true, //swith구문 사용 시 break;를 사용하지 않으면 경고 메시지 띄움
    "module": "esnext", // 모듈 정보를 설정한다
    "moduleResolution": "node", //모듈 코드 해석시에 어떤 버전으로 해석할지 설정한다
    "resolveJsonModule": true, //json파일도 import를 가능하게 한다
    "isolatedModules": true, // transpileModule, @babel/plugin-transform-typescript의 컴파일 결과가 안전한지 추가 확인
    "removeComments": true, //컴파일 할 때 작성해 둔 코멘트를 지운다.
    "noEmit": true, //결과 파일 내보내기 여부
    "composite": true, //앞전의 build 정보를 기억해 이전 파일과 비교 후 필요한 부분만 build한다. build 속도를 높일 수 있다.
    "jsx": "react-jsx", //JSX 코드 생성 설정('preserve', 'react-native', 'react-jsx')
    "rootDir": "./src", // root폴더를 지정, 상위 디렉토리에 ts 파일 작성이 불가능해진다.
  },
  "include": [
    "src" //컴파일 할 파일 경로 설정
  ]
}

// outDir: 컴파일 된 파일들을 보관할 경로 설정, 따로 설정하지 않으면 제일 첫번째 ts파일이 있는 곳을 기준으로 경로를 잡는다.
// incremental: 컴파일 될때마다 모든 파일을 하는 것이 아니라, 파일을 비교 후 수정이 일어난 파일만 컴파일한다 (컴파일 시간이 빨라지나, 컴퓨터 용량을 많이 차지할 수 있음)